<template>
	<div v-if="!info.id" class="text-center padding">
		<text class="cu-load loading"></text>
	</div>
	<div v-else style="position: relative;" >
		<div class="">
			<div class="bg-img bg-mask flex align-center header">
				<video class="video-obj" id="myVideo" :src="currSingle.url" @error="videoErrorCallback" :danmu-list="danmuList" enable-danmu danmu-btn controls></video>
				<div v-if="showControl" class="flex align-center control-bar">
					<div @click="showBarrage = !showBarrage" class="text-xxl padding-xs control-icon-box">
						<text v-if="showBarrage" class="lg text-white cuIcon-edit"></text>
						<text v-else class="lg text-white cuIcon-roundclose"></text>
					</div>
					<div class="text-sm padding-xs flex align-center flex-sub control-icon-box">
						<input v-model="form.barrage" class="text-df text-white flex-sub" placeholder="来点弹幕啊~" />
						<text @click="addSingleBarrage" class="text-white padding-lr-sm text-df" style="border-left: 1rpx solid #666666;">发送</text>
					</div>
					<div @click="$refs.ds.show()" class="text-xxl padding-xs control-icon-box">
						<div class="text-xs text-white bx-text">倍速</div>
					</div>
				</div>
			</div>
			<view class="cu-bar bg-white shadow flex align-center justify-center padding-xs padding-top-lg">
				<view @click="doFavorites" class="flex flex-direction flex-sub bnt-box align-center justify-center">
					<text class="" :class="mf ? 'text-red cuIcon-likefill' : 'cuIcon-like'" style="font-size: 18px;"></text> 
					<view class="" :class="mf ? 'text-red' : ''" style="font-size: 12px;">
						喜欢
					</view>
				</view>
				<view class="flex flex-direction flex-sub bnt-box align-center justify-center">
					<text class="cuIcon-down" style="font-size: 18px;"></text> 
					<view class="" style="font-size: 12px;">
						下载
					</view>
				</view>
			</view>
			<view class="bg-white solid-bottom">
				<view class="cu-bar padding flex">
					<image class="radius" style="width: 100rpx; height: 100rpx; background-color: #eeeeee;" mode="scaleToFill" :src="info.cover"></image>
					<view class="flex flex-sub flex-direction margin-lr">
						<view class="text-black text-bold text-xl">
							{{info.name}}
						</view>
						<view class="text-content text-gray text-xs">
							{{info.times}}次播放 {{info.categoryName}} {{info.status === 1 ? '连载中' : '已完结'}}
						</view>
					</view>
					<view class="">
						<button @click="showDescription = !showDescription" class="cu-btn bg-gradual-red">简介</button>
					</view>
				</view>
				<view v-if="showDescription" class="padding">{{info.description}}</view>
			</view>
			<view class="bg-white solid-bottom">
				<view class="cu-bar padding flex">
					<view class="ext-black text-bold">选集</view>
					<view class="text-content text-gray text-xs">
						共{{info.totalCount}}集
					</view>
				</view>
				<view class="bg-white padding">
					<view class="grid margin-bottom text-center col-3">
						<view v-for="(item, index) in list" :key="index" class="flex justify-center margin-bottom single-box">
							<view @click="clickSingle(item)" class="nav-li solid padding-sm" :class="currId == item.id ? 'active' : ''">
								<view class="text-black text-cut margin-bottom-xs">
									{{item.name}}
								</view>
								<view class="text-xs text-grey text">
									{{item.duration}}
								</view>
							</view>
							<view class="vip-icon">
								<text v-if="item.vip" class="bg-orange cu-tag round sm margin-right-xs">VIP</text>
							</view>
						</view>
					</view>
				</view>
			</view>
			<view class="bg-white solid-bottom">
				<view class="padding flex align-center">
					<view class="cu-avatar round" style="background-image:url(https://ossweb-img.qq.com/images/lol/web201310/skin/big10001.jpg)"></view>
					<view class="flex flex-sub flex-direction margin-lr">
						<view class="text-black text-bold ">
							上传用户：{{info.uploadUserName}}
						</view>
					</view>
				</view>
			</view>
			<view v-if="currSingle" class="bg-white solid-bottom">
				<view class="cu-bar padding flex">
					<view class="ext-black text-bold">
						本集介绍
					</view>
					<view class="text-content text-gray text-xs">
						{{currSingle.name}}
					</view>
				</view>
				<view class="padding" style="min-height: 300px;">
					{{currSingle.description}}
				</view>
			</view>
		</div>
	</div>
</template>

<script>
	import {getAlbumDetails, addSingleBarrage, getAlbumSingleBarrage} from '@/api/works.js';
	import {doFavorites} from '@/api/user.js';
	import DoubleSpeed from '@/components/double-speed.vue';
	
	export default {
		components: {DoubleSpeed},
		data() {
			return {
				info: {},
				list: [],
				mf: null,
				showControl: false,
				showBarrage: true,
				showDescription: false,
				query: {id: 3},
				form: {},
				barrages: [],
				currBarrages: [],
				danmuList: [],
				currId: 0
			};
		},
		computed: {
			currSingle() {
				let ev = this.list.filter(i => i.id == this.currId);
				if (ev && ev.length) {
					return ev[0];
				} else if (this.list && this.list.length) {
					return this.list[0];
				} else {
					return null;
				}
			}
		},
		onLoad(query) {
			this.query = {...this.query, ...query};
			this.loadAlbumSingleBarrage(this.currId);
			this.loadAlbumDetails();
		},
		methods: {
			goBack() {
				uni.navigateBack({
					delta: 1
				})
			},
			loadAlbumSingleBarrage(id) {
				if (id && id != 0) {
					getAlbumSingleBarrage({id}).then(res => {
						if (res.data.code == 200) {
							if (this.currId == id) {
								this.barrages = [...res.data.data];
								this.currBarrages = [...res.data.data];
							}
						} else {
							this.$toast.fail(res.data.msg);
						}
					})
				}
			},
			loadAlbumDetails() {
				if (this.query.id && this.query.id != 0) {
					getAlbumDetails({id: this.query.id}).then(res => {
						if (res.data.code == 200) {
							this.info = res.data.details;
							this.list = res.data.list;
							if (this.list && this.list.length) {
								this.currId = this.list[0].id;
							}
							this.mf = res.data.member_follow;
						} else {
							this.$toast.fail(res.data.msg);
						}
					})
				}
			},
			addSingleBarrage() {
				if (!this.currId) {
					return this.$toast.fail('缺少id');
				}
				if (!this.form.barrage) {
					return this.$toast.fail('请填写弹幕内容');
				}
				let data = {
					id: this.currId,
					text: this.form.barrage,
					time: this.currentPosition
				};
				
				addSingleBarrage(data).then(res => {
					if (res.data.code == 200) {
						if (this.showBarrage) {
							this.$refs.ffb.add({item: this.form.barrage});
						}
						this.barrages.push(data);
						this.form.barrage = '';
					} else {
						this.$toast.fail(res.data.msg);
					}
				})
			},
			clickSingle(item) {
				this.currId = item.id;
			},
			videoErrorCallback() {
				
			},
			doFavorites() {
				if (this.list.length <= 0) {
					return this.$toast.fail('当前专辑没有任何单曲');
				}
				let data = {status: 1, works_id: this.list[0].id};
				doFavorites(data).then(res => {
					if (res.data.code === 200) {
						this.mf = !this.mf;
					} else if (res.data.code === 401) {
						uni.navigateTo({
							url: '/pages/login/login'
						})
					} else {
						this.$toast.fail(res.data.msg);
					}
				})
			}
		}
	}
</script>

<style lang="scss" scoped>
	
</style>
